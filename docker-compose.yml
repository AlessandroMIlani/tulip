version: "3.2"
services:
  mongo:
    image: mongo:5
    networks:
      - internal
    restart: always
    ports:
      - "27017:27017"

  frontend:
    restart: always
    build:
      context: frontend
      dockerfile: Dockerfile-frontend
    image: tulip-frontend:latest
    ports:
      - "3000:3000"
    depends_on:
      - mongo
      - api
    networks:
      - internal
    environment:
      API_SERVER_ENDPOINT: http://api:5000/

  api:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-python
    image: tulip-api:latest
    ports:
      - "5000:5000"
    depends_on:
      - mongo
    networks:
      - internal
    volumes:
      - ${TRAFFIC_DIR_HOST}:${TRAFFIC_DIR_DOCKER}:ro
    environment:
      TULIP_MONGO: ${TULIP_MONGO}
      TULIP_TRAFFIC_DIR: ${TRAFFIC_DIR_DOCKER}
      FLAG_REGEX: ${FLAG_REGEX}
      TICK_START: ${TICK_START}
      TICK_LENGTH: ${TICK_LENGTH}
      VM_IP: ${VM_IP}

  flagids:
    restart: always
    build:
      context: services/flagids
    image: tulip-flagids:latest
    depends_on:
      - mongo
    networks:
      - internal
    environment:
      TULIP_MONGO: ${TULIP_MONGO}
      TICK_START: ${TICK_START}
      TICK_LENGTH: ${TICK_LENGTH}
      TEAM_ID: ${TEAM_ID}
      FLAGID_ENDPOINT: ${FLAGID_ENDPOINT}

  assembler:
    restart: always
    build:
      context: services/go-importer
      dockerfile: Dockerfile-assembler
    image: tulip-assembler:latest
    depends_on:
      - mongo
    networks:
      - internal
    volumes:
      - ${TRAFFIC_DIR_HOST}:${TRAFFIC_DIR_DOCKER}:ro
    command: "./assembler -dir ${TRAFFIC_DIR_DOCKER}"
    environment:
      TULIP_MONGO: ${TULIP_MONGO}
      FLAG_REGEX: ${FLAG_REGEX}
      TICK_LENGTH: ${TICK_LENGTH}
      FLAG_LIFETIME: ${FLAG_LIFETIME}

  enricher:
    restart: always
    build:
      context: services/go-importer
      dockerfile: Dockerfile-enricher
    image: tulip-enricher:latest
    depends_on:
      - mongo
    networks:
      - internal
    volumes:
      - ${TRAFFIC_DIR_HOST}:${TRAFFIC_DIR_DOCKER}:ro
    command: "./enricher -eve ${TRAFFIC_DIR_DOCKER}/eve.json"
    environment:
      TULIP_MONGO: ${TULIP_MONGO}

networks:
  internal:
